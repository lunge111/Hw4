p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red"")
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
print(a)
}
p(A)
plot(ellipse(A),type="l")
p(A)
A=matrix(c(1,1,1,-1,1,1,0,-2,1,0,0,-3),3,4)
A
A%*%t(c(3,2,-2,6))
A%*%t(vector(3,2,-2,6))
A
t(vector(3,2,-2,6))
t(NUMERIC(3,2,-2,6))
t(numeric(3,2,-2,6))
t(c(3,2,-2,6))
c(3,2,-2,6)
t(t(c(3,2,-2,6)))
A%*%t(t(c(3,2,-2,6)))
A%*%diag(rep(3,4))%*%t(A)
A%*%t(A)
A=matrix(c(5, 1,1,5),2,2)
B=matrix(c(5, 0,0,5),2,2)
C=matrix(c(1,1,1,10),2,2)
D=matrix(c(1,-2,-2,10),2,2)
E=C(A,B,C,D)
library(MASS)
#install.packages("ellipse")
library(ellipse)
lapply(E, function(a) plot(ellipse(a),type="l"))
E=list(A,B,C,D)
lapply(E, function(a) plot(ellipse(a),type="l"))
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
p(A)
randomMVN<-function(n,mu=rep(0,ncol(vcm)),vcm)
{
y=matrix(rep(0,ncol(vcm)*n),ncol=3)
for(i in 1:n){
a=rnorm(mu,rep(1,ncol(vcm)))
P=eigen(vcm)$vectors
T=P%*%diag(c(sqrt(eigen(vcm)$values)))
y[i,]=T%*%a
#y=sapply(1:n, function(a) y[a,]=eigen(vcm)$vectors%*%rnorm(mu,rep(1,ncol(vcm))))
#t(y)
}
data.frame(x1=y[,1],x2=y[,2],x3=y[,3])
}
A=matrix(c(20, 10, 10,
10, 20, 12,
10, 12, 17),3,3)
OB=randomMVN(10000,,A)
pairs(OB)
sd(OB$x1)
sd(OB$x2)
sd(OB$x3)
eigen(A)$values
sum(c(sd(OB$x1)^2,sd(OB$x2)^2,sd(OB$x3)^2))-sum(eigen(A)$values)
install.packages("multicore")
install.packages("multicore")
A=matrix(c(5, 1,1,5),2,2)
B=matrix(c(5, 0,0,5),2,2)
C=matrix(c(1,1,1,10),2,2)
D=matrix(c(1,-2,-2,10),2,2)
E=list(A,B,C,D)
library(MASS)
#install.packages("ellipse")
library(ellipse)
lapply(E, function(a) plot(ellipse(a),type="l"))
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
abline(h=0,v=0)
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
a=matrix(data=c(5,1,1,5),2,2)
#plots their ellipses
plot(ellipse(a), xlim=c(-10,10), ylim=c(-10,10), type='l', main="3a")
#plots eigenvector/eigenvalue points
a1=sqrt(eigen(a)$values[1])*eigen(a)$vectors[1,]
points(a1[1],a1[2])
a2=sqrt(eigen(a)$values[2])*eigen(a)$vectors[2,]
points(-a1[1],-a1[2])
points(a2[1],a2[2])
points(-a2[1],-a2[2])
eigen(a)
plot(ellipse(a), xlim=c(-10,10), ylim=c(-10,10), type='l', main="3a")
a1=sqrt(eigen(a)$values[1])*eigen(a)$vectors[1,]
a2=sqrt(eigen(a)$values[2])*eigen(a)$vectors[2,]
points(a1[1],a1[2])
plot(ellipse(a), xlim=c(-10,10), ylim=c(-10,10), type='l', main="3a")
#plots eigenvector/eigenvalue points
a1=sqrt(eigen(a)$values[1])*eigen(a)$vectors[,1]
a2=sqrt(eigen(a)$values[2])*eigen(a)$vectors[,2]
points(a1[1],a1[2])
points(-a1[1],-a1[2])
points(a2[1],a2[2])
points(-a2[1],-a2[2])
plot(ellipse(a), xlim=c(-10,10), ylim=c(-10,10), type='l', main="3a")
#plots eigenvector/eigenvalue points
a1=sqrt(eigen(a)$values[1])*eigen(a)$vectors[1,]
a2=sqrt(eigen(a)$values[2])*eigen(a)$vectors[2,]
points(a1[1],a1[2])
p(A)
p(B)
p(C)
p(D)
p(A)
p(A)
plot(ellipse(a), xlim=c(-10,10), ylim=c(-10,10), type='l', main="3a")
#plots eigenvector/eigenvalue points
a1=eigen(a)$vectors[1,]
a2=eigen(a)$vectors[2,]
points(a1[1],a1[2])
points(-a1[1],-a1[2])
points(a2[1],a2[2])
points(-a2[1],-a2[2])
p(A)
#pro.3&4
A=matrix(c(5, 1,1,5),2,2)
B=matrix(c(5, 0,0,5),2,2)
C=matrix(c(1,1,1,10),2,2)
D=matrix(c(1,-2,-2,10),2,2)
E=list(A,B,C,D)
library(MASS)
#install.packages("ellipse")
library(ellipse)
lapply(E, function(a) plot(ellipse(a),type="l"))
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[1,]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
print(a)
}
p(A)
lapply(E, function(a) plot(ellipse(a),type="l"))
p(A)
p(B)
p(C)
p(D)
p(A)
p(B)
p(C)
p(A)
lapply(E, function(a) plot(ellipse(a),type="l"))
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[2,]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[1,2],col="blue")
arrows(0,0,x1=b[2,1],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[2,]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[2,]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=-b[1,2],y1=-b[2,2],col="red")
print(a)
}
p(A)
p(A)
p(B)
p(C)
#pro.3&4
A=matrix(c(5, 1,1,5),2,2)
B=matrix(c(5, 0,0,5),2,2)
C=matrix(c(1,1,1,10),2,2)
D=matrix(c(1,-2,-2,10),2,2)
E=list(A,B,C,D)
library(MASS)
#install.packages("ellipse")
library(ellipse)
lapply(E, function(a) plot(ellipse(a),type="l"))
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[2,]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p<-function(A){
a=eigen(A)
plot(a$vectors,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=-b[1,2],y1=-b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=-b[1,2],y1=-b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,-b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=-b[1,2],y1=-b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.2,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.05,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(C)
p(A)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
b=a$vectors
xlab="x",ylab="y")
text(b[,1]+0.05,b[,2]+0.05,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
text(b[,1]+0.05,b[,2]+0.05,c(a$values[1],a$values[2]))
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
#pro.3&4
A=matrix(c(5, 1,1,5),2,2)
B=matrix(c(5, 0,0,5),2,2)
C=matrix(c(1,1,1,10),2,2)
D=matrix(c(1,-2,-2,10),2,2)
E=list(A,B,C,D)
library(MASS)
#install.packages("ellipse")
library(ellipse)
lapply(E, function(a) plot(ellipse(a),type="l"))
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[,1]+0.05,b[,2]+0.05,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(A)
?eigen
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(c(b[1,1],b[2,1])+0.05,c(b[1,2],b[2,2])+0.05,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
?text
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
text(b[1,]+0.05,b[1,]+0.05,c(a$values[1],a$values[2]))
abline(h=0,v=0)
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p<-function(A){
a=eigen(A)
plot(NULL,xlim=c(-1,1),ylim=c(-1,1),main="eigenvectors and respective eigenvalues",
xlab="x",ylab="y")
b=a$vectors
abline(h=0,v=0)
text(b[1,]+0.05,b[2,]+0.05,c(a$values[1],a$values[2]))
arrows(0,0,x1=b[1,1],y1=b[2,1],col="blue")
arrows(0,0,x1=b[1,2],y1=b[2,2],col="red")
print(a)
}
p(A)
p(B)
p(C)
p(D)
#pro.8
？？boostrap
??boostrap
a=numeric(100)
g<-function(alpha,n,N,p,Type=c("Traditional" , "Modified"))
{l=list()
for(i in 1:N)
l[[i]]=rbinom(1,n,p)
ci=sapply(l,function(x,alpha,n,type){
if(type=="Traditional"){
n=n
pest = sum(x)/(n)
}else{n=n+4
pest=(sum(x)+2)/n
}
c(pest-qnorm(1-alpha/2)*sqrt(pest*(1-pest)/n),pest+qnorm(1-alpha/2)*sqrt(pest*(1-pest)/n))
},n=n,type=Type,alpha=alpha)
sum(apply(ci,2,function(x,p) p>x[1]&&p<x[2],p=p))/N
}
sapply(a,g(0.1,10,10,0.5,Type="Tradition"))
sapply(a,g(x,0.1,10,10,0.5,Type="Tradition"))
sapply(1:100,g(0.1,10,10,0.5,Type="Tradition"))
data=read.csv("D:/1990.csv",colClasses=c("NULL",rep("integer",3),rep("NULL",4),"character",rep("NULL",5),"integer","NULL","character","character",rep("NULL",11)))
airp=read.csv("D:/airports.csv")
airp=airp[airp$iata%in%airport,]
carrier=unique(data$UniqueCarrier)
airport=names(sort(table(data$Origin),decreasing=T))[1:10]
airpdat=list()
for(i in 1:10)
airpdat[[i]]=data[data$Origin==airport[i],]
sub<-function(data,carr,month=c(1,12),day1=c(1,31),day2=c(1,7))
{data=data[data$UniqueCarrier==carr&
data$Month>=month[1]&data$Month<=month[2]&data$DayofMonth>=day1[1]&
data$DayofMonth<=day1[2]&data[,3]>=day2[1]&data[,3]<=day2[2],"ArrDelay"]
data}
setwd("D:/shinyapp/shinyapp")
library(shiny)
runApp()
data(uspop2000)
uspop2000
head(uspop2000)
airpdat=data[data$Origin%in%airport,]
?isolate
